model{
# RD model-------------------------------------
#13 primary occasions, first 10 with 3 secondary sampling periods, last 3 with 2 sampling periods. Year 11 (2020) had no sampling - Survey covariate accounts for this. 
#final year survival estimated as a fixed effect (not included in random year effect)

#Model 6 â€“ Gamma tide, p rand day, p/c
# Survival: random year effect
# Availability (gamma): fixed effect of tide amplitude
# Capture: random day effect
# Recapture: not equal to capture

#-------------
#Section 1. Define priors for all parameters#
#-------------

#Survival parameters
for (i in 1:n) {
  for (t in f[i]:(n1-2)){
    logit(phi[i,t]) <- phi.mu + phi.eps[t]
  } #t
  
  logit(phi[i,(n1-1)]) <- phi.mu + alpha
} #i

for (t in 1:(n1-2)){
  phi.eps[t] ~ dnorm(0,phi.tau)
} #t

phi.mean ~ dunif(0,1) #Prior for mean survival
phi.mu <- log(phi.mean/(1-phi.mean)) #logit transformation
phi.tau <- pow(phi.sd,-2)
phi.sd ~ dunif(0,5) #Prior for sd survival (temporal variance)
alpha ~ dnorm(0,0.37)

#Availability

for (i in 1:n) {
for (t in f[i]:(n1-1)){
logit(gamma[i,t]) <- gam.mu + beta*tide.mean[t]
} #t
} #i

gam.mean ~ dunif(0,1) #Prior for mean fidelity
gam.mu <- log(gam.mean/(1-gam.mean)) #logit transformation
beta ~ dnorm(0,0.37)

#Capture parameters

for (j in 1:n2){
  p.eps[j] ~ dnorm(0,p.tau)
} #j

for (i in 1:n) {
for (j in 1:n2) {
lp[i,j] <- p.mu + p.eps[j] + delta * X[i,j] 
p[i,j] <- 1/(1+exp(-lp[i,j]))*Survey[i,j]
} #j
} #i
  
p.mean ~ dunif(0,1) #Prior for mean detection
p.mu <- log(p.mean/(1-p.mean)) #logit transformation
p.tau <- pow(p.sd,-2)
p.sd ~ dunif(0,5)
delta ~ dnorm(0, 0.37)

#-------------
#Section 2. Likelihoods#
#-------------

# State process #
for (i in 1:n){

z[i,f[i]] <- 1

# Observation process for the first secondary period in the first primary period of capture
    y[i,(cnss[f[i]]+1)] ~ dbern(p.eff[i,(cnss[f[i]]+1)])
    p.eff[i,(cnss[f[i]]+1)] <- p[i,(cnss[f[i]]+1)]
	#loglik[i,(cnss[f[i]]+1)] <- logdensity.bin(y[i,(cnss[f[i]]+1)],p.eff[i,(cnss[f[i]]+1)],1)
	loglike.waic[i,(cnss[f[i]]+1)] <- logdensity.bin(y[i,(cnss[f[i]]+1)],p.eff[i,(cnss[f[i]]+1)],1)

# Observation process for subsequent secondary periods in first primary period of capture
for (j in 2:nss[f[i]]) { #Loop over secondary periods (times / days)
    y[i,(cnss[f[i]]+j)] ~ dbern(p.eff[i,(cnss[f[i]]+j)])
    p.eff[i,(cnss[f[i]]+j)] <- p[i,(cnss[f[i]]+j)]
	#loglik[i,(cnss[f[i]]+j)] <- logdensity.bin(y[i,(cnss[f[i]]+j)],p.eff[i,(cnss[f[i]]+j)],1)
	loglike.waic[i,(cnss[f[i]]+j)] <- logdensity.bin(y[i,(cnss[f[i]]+j)],p.eff[i,(cnss[f[i]]+j)],1)
} #j secondary

# State and observation process in subsequent primary periods
for (t in (f[i]+1):n1){
phi.eff[i,t] <- phi[i, t-1] * z[i,t-1]  # Effective survival rate
z[i,t] ~ dbern(phi.eff[i,t])
loglike.phi[i,t] <- logdensity.bin(z[i,t], phi.eff[i,t], 1) 
avail[i,t] <- gamma[i,t-1] * z[i,t] 
s[i,t] ~ dbern(avail[i,t])
loglike.avail[i,t] <- logdensity.bin(s[i,t], avail[i,t], 1) 

# Observation process for the first secondary period
y[i,(cnss[t]+1)] ~ dbern(p.eff[i,(cnss[t]+1)])
p.eff[i,(cnss[t]+1)] <- s[i,t] * p[i,(cnss[t]+1)]
#loglik[i,(cnss[t]+1)] <- logdensity.bin(y[i,(cnss[t]+1)],p.eff[i,(cnss[t]+1)],1)
loglike.waic[i,(cnss[t]+1)] <- logdensity.bin(y[i,(cnss[t]+1)],p.eff[i,(cnss[t]+1)],1)

# Observation process in subsequent secondary periods
for (j in 2:nss[t]) { #Loop over secondary periods (times / days)
y[i,(cnss[t]+j)] ~ dbern(p.eff[i,(cnss[t]+j)])
p.eff[i,(cnss[t]+j)] <- s[i,t] * p[i,(cnss[t]+j)]
#loglik[i,(cnss[t]+j)] <- logdensity.bin(y[i,(cnss[t]+j)],p.eff[i,(cnss[t]+j)],1)
loglike.waic[i,(cnss[t]+j)] <- logdensity.bin(y[i,(cnss[t]+j)],p.eff[i,(cnss[t]+j)],1)

} #j secondary
} #t primary

#loglik.sum[i] <- sum(loglik[i,(cnss[f[i]]+1):n2])
#for (t in f[i]:n1){
#ll.test[i,t]<-sum(loglike.waic[i,(cnss[t]+1):(cnss[t]+nss[t])])
#}

#loglike for first primary period of capture
for (t in f[i]){
ll[i,t]<-sum(loglike.waic[i,(cnss[t]+1):(cnss[t]+nss[t])])
}

#loglike for subsequent primary periods
for (t in (f[i]+1):n1){
ll.w[i,t]<-sum(loglike.waic[i,(cnss[t]+1):(cnss[t]+nss[t])])
ll[i,t]<-ll.w[i,t]+loglike.phi[i,t]+loglike.avail[i,t]
}

#individual (row) loglike
loglike.new[i]<-sum(ll[i,f[i]:n1])
#ll.test.sum[i]<-sum(ll.test[i,f[i]:n1])

} #i individual

#---------
#Section 3. Derived parameters#
#---------

#time specific c and p
for (j in 1:n2) {
time.p[j]  <- 1/(1+exp(-(p.mu + p.eps[j])))*Survey[1,j]
time.c[j]  <- 1/(1+exp(-(p.mu + p.eps[j] + delta)))*Survey[1,j]
}

#time specific phi
for (t in 1:(n1-2)){
  phi.t[t] <- 1/(1+exp(-(phi.mu + phi.eps[t])))
}
phi.t[(n1-1)] <- 1/(1+exp(-(phi.mu + alpha)))

}